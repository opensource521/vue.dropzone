{"version":3,"file":"vue2Dropzone.js","sources":["../src/services/urlsigner.js","../src/components/vue-dropzone.vue"],"sourcesContent":["export default {\n  getSignedURL(file, config) {\n    let payload = {\n      filePath: file.name,\n      contentType: file.type\n    }\n\n    return new Promise((resolve, reject) => {\n      var fd = new FormData();\n      let request = new XMLHttpRequest(),\n          signingURL = (typeof config.signingURL === \"function\") ?  config.signingURL(file) : config.signingURL;\n      request.open(\"POST\", signingURL);\n      request.onload = function () {\n        if (request.status == 200) {\n          resolve(JSON.parse(request.response));\n        } else {\n          reject((request.statusText));\n        }\n      };\n      request.onerror = function (err) {\n        console.error(\"Network Error : Could not send request to AWS (Maybe CORS errors)\");\n        reject(err)\n      };\n      Object.entries(config.headers || {}).forEach(([name, value]) => {\n        request.setRequestHeader(name, value);\n      });\n      payload = Object.assign(payload, config.params || {});\n      Object.entries(payload).forEach(([name, value]) => {\n        fd.append(name, value);\n      });\n\n      request.send(fd);\n    });\n  },\n  sendFile(file, config) {\n    return this.getSignedURL(file, config)\n      .then((response) => {\n        file.s3Signature = response.signature;\n        file.s3Url = response.postEndpoint;\n      })\n      .catch((error) => {\n        return error;\n      });\n  }\n}\n","<template>\n  <div v-bind:class=\"{ 'vue-dropzone dropzone': includeStyling }\" :id=\"id\" ref=\"dropzoneElement\">\n  </div>\n</template>\n\n<script>\nimport awsEndpoint from '../services/urlsigner'\nexport default {\n  props: {\n    id: {\n      type: String,\n      required: true\n    },\n    options: {\n      type: Object,\n      required: true\n    },\n    includeStyling: {\n      type: Boolean,\n      default: true,\n      required: false\n    },\n    awss3: {\n      type: Object,\n      required: false,\n      default: null\n    },\n    destroyDropzone: {\n      type: Boolean,\n      default: true,\n      required: false\n    }\n  },\n  data() {\n    return {\n      isS3: false,\n      wasQueueAutoProcess: true,\n    }\n  },\n  computed: {\n    dropzoneSettings() {\n      let defaultValues = {\n        thumbnailWidth: 200,\n        thumbnailHeight: 200\n      }\n      Object.keys(this.options).forEach(function(key) {\n        defaultValues[key] = this.options[key]\n      }, this)\n      if (this.awss3 !== null) {\n        defaultValues['autoProcessQueue'] = false;\n        this.isS3 = true;\n        if (this.options.autoProcessQueue !== undefined)\n          this.wasQueueAutoProcess = this.options.autoProcessQueue;\n\n        defaultValues['url'] = (files) => {\n          return files[0].s3Url;;\n        }\n      }\n      return defaultValues\n    }\n  },\n  methods: {\n    manuallyAddFile: function(file, fileUrl) {\n      file.manuallyAdded = true;\n      this.dropzone.emit(\"addedfile\", file);\n      fileUrl && this.dropzone.emit(\"thumbnail\", file, fileUrl);\n\n      var thumbnails = file.previewElement.querySelectorAll('[data-dz-thumbnail]');\n      for (var i = 0; i < thumbnails.length; i++) {\n        thumbnails[i].style.width = this.dropzoneSettings.thumbnailWidth + 'px';\n        thumbnails[i].style.height = this.dropzoneSettings.thumbnailHeight + 'px';\n        thumbnails[i].style['object-fit'] = 'contain';\n      }\n      this.dropzone.emit(\"complete\", file)\n      if (this.dropzone.options.maxFiles) this.dropzone.options.maxFiles--\n      this.dropzone.files.push(file)\n      this.$emit('vdropzone-file-added-manually', file)\n    },\n    setOption: function(option, value) {\n      this.dropzone.options[option] = value\n    },\n    removeAllFiles: function(bool) {\n      this.dropzone.removeAllFiles(bool)\n    },\n    processQueue: function() {\n      let dropzoneEle = this.dropzone;\n      if (this.isS3 && !this.wasQueueAutoProcess) {\n        this.getQueuedFiles().forEach((file) => {\n          this.getSignedAndUploadToS3(file);\n        });\n      } else {\n        this.dropzone.processQueue();\n      }\n      this.dropzone.on(\"success\", function() {\n        dropzoneEle.options.autoProcessQueue = true\n      });\n      this.dropzone.on('queuecomplete', function() {\n        dropzoneEle.options.autoProcessQueue = false\n      })\n    },\n    init: function() {\n      return this.dropzone.init();\n    },\n    destroy: function() {\n      return this.dropzone.destroy();\n    },\n    updateTotalUploadProgress: function() {\n      return this.dropzone.updateTotalUploadProgress();\n    },\n    getFallbackForm: function() {\n      return this.dropzone.getFallbackForm();\n    },\n    getExistingFallback: function() {\n      return this.dropzone.getExistingFallback();\n    },\n    setupEventListeners: function() {\n      return this.dropzone.setupEventListeners();\n    },\n    removeEventListeners: function() {\n      return this.dropzone.removeEventListeners();\n    },\n    disable: function() {\n      return this.dropzone.disable();\n    },\n    enable: function() {\n      return this.dropzone.enable();\n    },\n    filesize: function(size) {\n      return this.dropzone.filesize(size);\n    },\n    accept: function(file, done) {\n      return this.dropzone.accept(file, done);\n    },\n    addFile: function(file) {\n      return this.dropzone.addFile(file);\n    },\n    removeFile: function(file) {\n      this.dropzone.removeFile(file)\n    },\n    getAcceptedFiles: function() {\n      return this.dropzone.getAcceptedFiles()\n    },\n    getRejectedFiles: function() {\n      return this.dropzone.getRejectedFiles()\n    },\n    getFilesWithStatus: function() {\n      return this.dropzone.getFilesWithStatus()\n    },\n    getQueuedFiles: function() {\n      return this.dropzone.getQueuedFiles()\n    },\n    getUploadingFiles: function() {\n      return this.dropzone.getUploadingFiles()\n    },\n    getAddedFiles: function() {\n      return this.dropzone.getAddedFiles()\n    },\n    getActiveFiles: function() {\n      return this.dropzone.getActiveFiles()\n    },\n    getSignedAndUploadToS3(file) {\n      awsEndpoint.sendFile(file, this.awss3)\n        .then(() => {\n            setTimeout(() => this.dropzone.processFile(file))\n        })\n        .catch((error) => {\n          alert(error);\n        });\n    },\n    setAWSSigningURL(location) {\n      if (this.isS3) {\n        this.awss3.signingURL = location;\n      }\n    }\n  },\n  mounted() {\n    if (this.$isServer && this.hasBeenMounted) {\n      return\n    }\n    this.hasBeenMounted = true\n    let Dropzone = require('dropzone') //eslint-disable-line\n    Dropzone.autoDiscover = false\n    this.dropzone = new Dropzone(this.$refs.dropzoneElement, this.dropzoneSettings)\n    let vm = this\n\n    this.dropzone.on('thumbnail', function(file, dataUrl) {\n      vm.$emit('vdropzone-thumbnail', file, dataUrl)\n    })\n\n    this.dropzone.on('addedfile', function(file) {\n      if (vm.duplicateCheck) {\n        if (this.files.length) {\n          this.files.forEach(function(dzfile) {\n            if (dzfile.name === file.name) {\n              this.removeFile(file)\n              vm.$emit('duplicate-file', file)\n            }\n          }, this)\n        }\n      }\n      vm.$emit('vdropzone-file-added', file)\n      if (vm.isS3 && vm.wasQueueAutoProcess) {\n        vm.getSignedAndUploadToS3(file);\n      }\n    })\n\n    this.dropzone.on('addedfiles', function(files) {\n      vm.$emit('vdropzone-files-added', files)\n    })\n\n    this.dropzone.on('removedfile', function(file) {\n      vm.$emit('vdropzone-removed-file', file)\n      if (file.manuallyAdded) vm.dropzone.options.maxFiles++\n    })\n\n    this.dropzone.on('success', function(file, response) {\n      vm.$emit('vdropzone-success', file, response)\n      if (vm.isS3) {\n          vm.$emit('vdropzone-s3-upload-success');\n          if (vm.wasQueueAutoProcess)\n            vm.setOption('autoProcessQueue', false);\n      }\n    })\n\n    this.dropzone.on('successmultiple', function(file, response) {\n      vm.$emit('vdropzone-success-multiple', file, response)\n    })\n\n    this.dropzone.on('error', function(file, message, xhr) {\n      vm.$emit('vdropzone-error', file, message, xhr)\n      if (this.isS3)\n        vm.$emit('vdropzone-s3-upload-error');\n    })\n\n    this.dropzone.on('errormultiple', function(files, message, xhr) {\n      vm.$emit('vdropzone-error-multiple', files, message, xhr)\n    })\n\n    this.dropzone.on('sending', function(file, xhr, formData) {\n      if (vm.isS3) {\n        let signature = file.s3Signature;\n        // TODO: Make sure this is not empty\n        Object.keys(signature).forEach(function (key) {\n          formData.append(key, signature[key]);\n        });\n      }\n      vm.$emit('vdropzone-sending', file, xhr, formData)\n    })\n\n    this.dropzone.on('sendingmultiple', function(file, xhr, formData) {\n      vm.$emit('vdropzone-sending-multiple', file, xhr, formData)\n    })\n\n    this.dropzone.on('complete', function(file) {\n      vm.$emit('vdropzone-complete', file)\n    })\n\n    this.dropzone.on('completemultiple', function(files) {\n      vm.$emit('vdropzone-complete-multiple', files)\n    })\n\n    this.dropzone.on('canceled', function(file) {\n      vm.$emit('vdropzone-canceled', file)\n    })\n\n    this.dropzone.on('canceledmultiple', function(files) {\n      vm.$emit('vdropzone-canceled-multiple', files)\n    })\n\n    this.dropzone.on('maxfilesreached', function(files) {\n      vm.$emit('vdropzone-max-files-reached', files)\n    })\n\n    this.dropzone.on('maxfilesexceeded', function(file) {\n      vm.$emit('vdropzone-max-files-exceeded', file)\n    })\n\n    this.dropzone.on('processing', function(file) {\n      vm.$emit('vdropzone-processing', file)\n    })\n\n    this.dropzone.on('processing', function(file) {\n      vm.$emit('vdropzone-processing', file)\n    })\n\n    this.dropzone.on('processingmultiple', function(files) {\n      vm.$emit('vdropzone-processing-multiple', files)\n    })\n\n    this.dropzone.on('uploadprogress', function(file, progress, bytesSent) {\n      vm.$emit('vdropzone-upload-progress', file, progress, bytesSent)\n    })\n\n    this.dropzone.on('totaluploadprogress', function(totaluploadprogress, totalBytes, totalBytesSent) {\n      vm.$emit('vdropzone-total-upload-progress', totaluploadprogress, totalBytes, totalBytesSent)\n    })\n\n    this.dropzone.on('reset', function() {\n      vm.$emit('vdropzone-reset')\n    })\n\n    this.dropzone.on('queuecomplete', function() {\n      vm.$emit('vdropzone-queue-complete')\n    })\n\n    this.dropzone.on('drop', function(event) {\n      vm.$emit('vdropzone-drop', event)\n    })\n\n    this.dropzone.on('dragstart', function(event) {\n      vm.$emit('vdropzone-drag-start', event)\n    })\n\n    this.dropzone.on('dragend', function(event) {\n      vm.$emit('vdropzone-drag-end', event)\n    })\n\n    this.dropzone.on('dragenter', function(event) {\n      vm.$emit('vdropzone-drag-enter', event)\n    })\n\n    this.dropzone.on('dragover', function(event) {\n      vm.$emit('vdropzone-drag-over', event)\n    })\n\n    this.dropzone.on('dragleave', function(event) {\n      vm.$emit('vdropzone-drag-leave', event)\n    })\n\n    vm.$emit('vdropzone-mounted')\n  },\n  beforeDestroy() {\n    if (this.destroyDropzone) this.dropzone.destroy()\n  }\n}\n\n</script>\n\n<style lang=\"less\">\n  @import (inline) '../../node_modules/dropzone/dist/dropzone.css';\n\n  .vue-dropzone {\n    border: 2px solid #E5E5E5;\n    font-family: 'Arial', sans-serif;\n    letter-spacing: 0.2px;\n    color: #777;\n    transition: background-color .2s linear;\n\n    &:hover {\n      background-color: #F6F6F6;\n    }\n\n    i {\n      color: #CCC;\n    }\n\n    .dz-preview {\n\n      .dz-image {\n        border-radius: 0;\n        width: 100%;\n        height: 100%;\n        img:not([src]) {\n          width: 200px;\n          height: 200px;\n        }\n        &:hover {\n          img {\n            transform: none;\n            -webkit-filter: none;\n          }\n        }\n      }\n\n      .dz-details {\n        bottom: 0;\n        top: 0;\n        color: white;\n        background-color: rgba(33, 150, 243, 0.8);\n        transition: opacity .2s linear;\n        text-align: left;\n        .dz-filename {\n          overflow: hidden;\n        }\n        .dz-filename span,\n        .dz-size span {\n          background-color: transparent;\n        }\n        .dz-filename:not(:hover) span {\n          border: none;\n        }\n        .dz-filename:hover span {\n          background-color: transparent;\n          border: none;\n        }\n      }\n\n      .dz-progress .dz-upload {\n        background: #cccccc;\n      }\n\n      .dz-remove {\n        position: absolute;\n        z-index: 30;\n        color: white;\n        margin-left: 15px;\n        padding: 10px;\n        top: inherit;\n        bottom: 15px;\n        border: 2px white solid;\n        text-decoration: none;\n        text-transform: uppercase;\n        font-size: 0.8rem;\n        font-weight: 800;\n        letter-spacing: 1.1px;\n        opacity: 0;\n      }\n\n      &:hover {\n        .dz-remove {\n          opacity: 1;\n        }\n      }\n\n      .dz-success-mark,\n      .dz-error-mark {\n        margin-left: auto;\n        margin-top: auto;\n        width: 100%;\n        top: 35%;\n        left: 0;\n        svg {\n          margin-left: auto;\n          margin-right: auto;\n        }\n      }\n\n      .dz-error-message {\n        top: calc(15%);\n        margin-left: auto;\n        margin-right: auto;\n        left: 0;\n        width: 100%;\n        &:after {\n          bottom: -6px;\n          top: initial;\n          border-top: 6px solid #a92222;\n          border-bottom: none;\n        }\n      }\n    }\n  }\n</style>\n"],"names":["getSignedURL","file","config","let","payload","filePath","name","contentType","type","Promise","resolve","reject","fd","FormData","request","XMLHttpRequest","signingURL","open","onload","status","JSON","parse","response","onerror","err","console","error","Object","entries","headers","forEach","ref","value","setRequestHeader","assign","params","append","send","sendFile","this","then","s3Signature","signature","s3Url","postEndpoint","catch","render","props","id","String","required","options","includeStyling","Boolean","default","awss3","destroyDropzone","data","isS3","wasQueueAutoProcess","computed","dropzoneSettings","defaultValues","thumbnailWidth","thumbnailHeight","keys","key","undefined","autoProcessQueue","files","methods","manuallyAddFile","fileUrl","manuallyAdded","dropzone","emit","thumbnails","previewElement","querySelectorAll","i","length","style","width","height","maxFiles","push","$emit","setOption","option","removeAllFiles","bool","processQueue","dropzoneEle","getQueuedFiles","getSignedAndUploadToS3","on","init","destroy","updateTotalUploadProgress","getFallbackForm","getExistingFallback","setupEventListeners","removeEventListeners","disable","enable","filesize","size","accept","done","addFile","removeFile","getAcceptedFiles","getRejectedFiles","getFilesWithStatus","getUploadingFiles","getAddedFiles","getActiveFiles","awsEndpoint","setTimeout","processFile","alert","setAWSSigningURL","location","mounted","$isServer","hasBeenMounted","Dropzone","require","autoDiscover","$refs","dropzoneElement","vm","dataUrl","duplicateCheck","dzfile","message","xhr","formData","progress","bytesSent","totaluploadprogress","totalBytes","totalBytesSent","event","beforeDestroy"],"mappings":"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"}